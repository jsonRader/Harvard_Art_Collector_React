{"version":3,"sources":["api/index.js","components/Feature.js","components/Loading.js","components/Preview.js","components/Search.js","components/Title.js","index.js"],"names":["BASE_URL","KEY","fetchQueryResultsFromTermAndValue","term","value","a","fetch","encodeURI","split","join","response","json","data","fetchQueryResultsFromURL","url","fetchQueryResults","century","classification","queryString","fetchAllCenturies","localStorage","getItem","JSON","parse","records","setItem","stringify","fetchAllClassifications","Searchable","searchTerm","searchValue","setIsLoading","setSearchResults","className","href","onClick","event","preventDefault","result","console","error","Feature","props","featuredResult","id","title","dated","description","style","dimensions","division","contact","creditline","culture","technique","medium","people","map","person","index","key","displayname","log","images","primaryimageurl","src","alt","Loading","Preview","setFeaturedResult","searchResults","info","fetchPage","pageUrl","results","disabled","prev","next","record","Search","useState","centuryList","setCenturyList","classificationList","setClassificationList","setQueryString","setCentury","setClassification","useEffect","Promise","all","then","centuries","catch","onSubmit","htmlFor","type","placeholder","onChange","target","length","name","Title","App","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc2d27b1.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.harvardartmuseums.org';\nexport const KEY = 'apikey=fe1bd050-ac49-4260-a17d-968ca78c0f93';\n\nexport async function fetchQueryResultsFromTermAndValue(term, value) {\n  try {\n    const response = await fetch(`${BASE_URL}/object?${KEY}&${term}=${encodeURI(value.split('-').join('|'))}`);\n    const data = await response.json();\n    return data;\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchQueryResultsFromURL(url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchQueryResults({\n  century,\n  classification,\n  queryString,\n}) \n\n{const url = `${BASE_URL}/object?${KEY}&classification=${classification}&century=${century}&keyword=${queryString}`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchAllCenturies() {\n  if (localStorage.getItem('centuries')) {\n    return JSON.parse(localStorage.getItem('centuries'));\n  }\n\n  const url = `${BASE_URL}/century?${KEY}&size=100&sort=temporalorder`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n\n    localStorage.setItem('centuries', JSON.stringify(records));\n    return records;\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchAllClassifications() {\n  if (localStorage.getItem('classifications')) {\n    return JSON.parse(localStorage.getItem('classifications'));\n  }\n\n  const url = `${BASE_URL}/classification?${KEY}&size=100&sort=name`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n\n    localStorage.setItem('classifications', JSON.stringify(records));\n    return records;\n    \n  } catch (error) {\n    throw error;\n  }\n}","import React from 'react';\nimport {fetchQueryResultsFromTermAndValue} from '../api';\n\nconst Searchable = ({searchTerm, searchValue, setIsLoading, setSearchResults}) => {\n    return (\n        <span className=\"content\">\n            <a href=\"#\" onClick={async (event) => {\n                event.preventDefault();\n                setIsLoading(true);\n                try {\n                    let result = await fetchQueryResultsFromTermAndValue(searchTerm, searchValue);\n                    setSearchResults(result)\n                } catch (error) {\n                    console.error(error);\n                } finally {\n                    setIsLoading(false)\n                }\n            }}>{searchTerm}</a>\n        </span>\n    )\n}\n\nconst Feature = (props) => {\n    const {featuredResult} = props;\n    return (featuredResult) \n        ? <>\n            <main id=\"feature\">\n                <div className=\"object-feature\">\n                    <header>\n                        <h3>{featuredResult.title}</h3>\n                        <h4>{featuredResult.dated}</h4>\n                    </header>  \n                    <section className=\"facts\">\n                        <span className=\"title\">{featuredResult.description}</span>\n                        <span className=\"content\"> STYLE: {featuredResult.style}</span>\n                        <span className=\"content\"> DIMENSIONS: {featuredResult.dimensions}</span>\n                        <span className=\"content\">{featuredResult.division}</span>\n                        <span className=\"content\"> CONTACT: {featuredResult.contact}</span>\n                        <span className=\"content\"> CREDIT: {featuredResult.creditline}</span>\n                        <>\n                            <span className=\"content\"> CULTURE: <Searchable \n                                searchTerm={featuredResult.culture}\n                                searchValue={featuredResult.culture}\n                                {...props}/>\n                            </span>\n                        </>\n                        <>\n                            <span className=\"content\"> TECHNIQUE: <Searchable \n                                searchTerm={featuredResult.technique}\n                                searchValue={featuredResult.technique}\n                                {...props}/>\n                            </span>\n                        </>\n                        <>\n                            <span className=\"content\"> MEDIUM: <Searchable \n                                searchTerm={featuredResult.medium}\n                                searchValue={featuredResult.medium}\n                                {...props}/>\n                            </span>\n                        </>\n                        <>\n                            <span className=\"content\"> PEOPLE(S): \n                                {featuredResult.people\n                                ? featuredResult.people.map((person, index) => {\n                                    return <span \n                                        key={`${person} ${index}`}\n                                        className=\"content\">\n                                        <Searchable\n                                            searchTerm={featuredResult.people.displayname}\n                                            searchValue={featuredResult.people.displayname}\n                                            {...props}\n\n                                            {...featuredResult.people.displayname\n                                                ? featuredResult.people.displayname\n                                                : console.log('Test: Where is people in ', featuredResult)\n                                            }\n                                        /> </span> })\n                                : console.log('Test Two: Where is people in ', featuredResult) }\n                            </span>\n                        </>\n                                \n                    </section>\n                    <section className=\"photos\">\n                        {featuredResult.images \n                        ? featuredResult.images.map((primaryimageurl, index) => {\n                            return <div\n                                key={`${primaryimageurl} ${index}`}\n                                className=\"photos\">\n                                    {featuredResult.primaryimageurl \n                                    ? <img src={featuredResult.primaryimageurl} alt={featuredResult.description}/> \n                                    : null}\n                            </div>}) \n                        : null}\n                    </section>\n                </div>\n            </main> \n        </> : <main id=\"feature\"></main> \n}\n\nexport default Feature;\n","import React from 'react';\n\nconst Loading = () => {\n        return (\n            <div id=\"loading\">\n                <h2 className=\"message\">Searching...</h2>\n            </div>\n        )\n}\n\nexport default Loading","import React from 'react';\nimport {fetchQueryResultsFromURL} from '../api';\n\nconst Preview = ({setSearchResults, setFeaturedResult, setIsLoading, searchResults:{info, records}}) => {\n  async function fetchPage(pageUrl) {\n    setIsLoading(true);\n    try {\n      let results = await fetchQueryResultsFromURL(pageUrl);\n      setSearchResults(results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  return <aside id=\"preview\">\n    <header className=\"pagination\">\n      <button \n        disabled={!info.prev} \n        className=\"previous\"\n        onClick={() => fetchPage(info.prev)}>Previous\n      </button>\n      <button\n        disabled={!info.next}\n        className=\"next\"\n        onClick={() => fetchPage(info.next)}>Next\n      </button>\n    </header>\n    <section className=\"results\">\n      {records.map((record, index) => \n        <div\n          key={`${record} ${index}`}\n          className=\"object-preview\"\n          onClick={(event) => {\n            event.preventDefault();\n            setFeaturedResult(record)\n        }}>\n          {record.primaryimageurl \n          ? <img src={record.primaryimageurl} alt={record.description} /> \n          : null}\n          {record.title \n          ? <h3>{record.title}</h3> \n          : <h3>{info}</h3>}\n        </div>)}\n    </section>\n  </aside>\n}\n\nexport default Preview;","import React, {useEffect, useState} from 'react';\nimport { \n  fetchAllCenturies,\n  fetchAllClassifications,\n  fetchQueryResults\n} from '../api';\n\nconst Search = ({setIsLoading, setSearchResults}) => {\n  const [centuryList, setCenturyList] = useState([]);\n  const [classificationList, setClassificationList] = useState([]);\n  const [queryString, setQueryString] = useState('');\n  const [century, setCentury] = useState('any');\n  const [classification, setClassification] = useState('any');\n\n  useEffect(() => {\n    Promise.all([\n      fetchAllCenturies(),\n      fetchAllClassifications()\n    ])\n    .then(([centuries, classification]) => { setCenturyList(centuries);     setClassificationList(classification)}) \n    .catch(error => {console.error(error)})\n  }, []);\n\n  return <form id=\"search\" onSubmit={async (event) => {\n    event.preventDefault()\n    setIsLoading(true)\n    try {\n      let results = await fetchQueryResults({century, classification, queryString})\n      setSearchResults(results)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setIsLoading(false)\n    }\n  }}>\n  <fieldset>\n    <label htmlFor=\"keywords\">Query</label>\n    <input \n      id=\"keywords\" \n      type=\"text\" \n      placeholder=\"enter keywords...\" \n      value={queryString} \n      onChange={(event) => setQueryString(event.target.value)}/>\n  </fieldset>\n  <fieldset>\n    <label htmlFor=\"select-classification\">Classification \n      <span className=\"classification-count\">({classificationList.length})</span>\n    </label>\n    <select \n      name=\"classification\"\n      id=\"select-classification\"\n      value={classification} \n      onChange={(event) => setClassification(event.target.value)}>\n        <option value=\"any\">Any</option>\n          {classificationList.map((classification, index) => \n            <option value={classification.name}key={classification.name+index}>{classification.name}</option>)\n          }\n    </select>\n  </fieldset>\n  <fieldset>\n    <label htmlFor=\"select-century\">Century \n      <span className=\"century-count\">({centuryList.length})</span>\n    </label>\n    <select \n      name=\"century\" \n      id=\"select-century\"\n      value={century} \n      onChange={(event) => setCentury(event.target.value)}>\n        <option value=\"any\">Any</option>\n          {centuryList.map((century, index) =>\n            <option value={century.name}key={century.name+index}>{century.name}</option>)\n          }\n    </select>\n  </fieldset>\n  <button>SEARCH</button>\n</form>}\n\nexport default Search;","import React from 'react';\n\nconst Title = () => {\n    return (\n        <div id=\"title\">\n            <h1>The Art Collector</h1>\n            <h5>Search the Harvard Art Museums' Private Collections</h5>\n        </div>\n    )\n}\n\nexport default Title","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title\n} from './components';\n\nconst App = () => {\n  const [searchResults, setSearchResults] = useState({info: {}, records: []});\n  const [featuredResult, setFeaturedResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return <div className=\"app\">\n    <Title />\n    <Search \n      setIsLoading={setIsLoading}\n      setSearchResults={setSearchResults}\n    />\n    <Preview \n      searchResults={searchResults}\n      setIsLoading={setIsLoading}\n      setSearchResults={setSearchResults}\n      setFeaturedResult={setFeaturedResult}\n    />\n    <Feature \n      featuredResult={featuredResult}\n      setIsLoading={setIsLoading}\n      setSearchResults={setSearchResults}\n    />\n    {(isLoading === true \n      ? <Loading /> \n      : null)}\n  </div>\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n)"],"sourceRoot":""}